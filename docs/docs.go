// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequeset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"data\":{\"token\":\"token\"},msg\":\"success\"}",
                        "schema": {
                            "$ref": "#/definitions/responses.LoginResonse"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 100002, \"msg\":\"\", \"data\": {}}",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseFail"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequeset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "msg: account already exists(:0) \\n msg: failed to create account(:1, :2)",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseFail"
                        }
                    }
                }
            }
        },
        "/member": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a member by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "member"
                ],
                "summary": "Get a member by ID",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.GetMemberResonse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "member"
                ],
                "summary": "Delete a member",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "member"
                ],
                "summary": "Update a member",
                "parameters": [
                    {
                        "description": "req",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.MemberUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ResponseSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/course": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all courses that the member belongs to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Get Course",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.CourseResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update course information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Update Course",
                "parameters": [
                    {
                        "description": "Course object that needs to be updated",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CourseUpdateReqeust"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a course, and assign the creator as the admin of the course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Create Course",
                "parameters": [
                    {
                        "description": "Course object that needs to be created",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CourseCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Delete Course",
                "parameters": [
                    {
                        "description": "Course object that needs to be deleted",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CourseDeleteReqeust"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/course/:course_id/units": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all units by course id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "summary": "Get Units By Course ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account",
                        "name": "account",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "course_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.UnitResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/course/assign": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Assign course permission to member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Course"
                ],
                "summary": "Assign Course Permission",
                "parameters": [
                    {
                        "description": "Course object that needs to be assigned",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AssignCourseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/organization": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all organizations that the member belongs to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Get Organization",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.OrganizationResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new organization, and the creator will be the admin of the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Create Organization",
                "parameters": [
                    {
                        "description": "Organization object that needs to be created",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.OrganizationCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"data\":{},\"msg\":\"success\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Delete Organization",
                "parameters": [
                    {
                        "description": "Organization object that needs to be deleted",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.OrganizationDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"data\":{},\"msg\":\"success\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update organization information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Update Organization",
                "parameters": [
                    {
                        "description": "Organization object that needs to be updated",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.OrganizationUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"data\":{},\"msg\":\"success\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/organization/assign": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Assign organization permission to another member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Assign Organization Permission",
                "parameters": [
                    {
                        "description": "Organization object that needs to be assigned",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AssignRoleToMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\":0,\"data\":{},\"msg\":\"success\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/quiz": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a quiz",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Create Quiz",
                "parameters": [
                    {
                        "description": "Quiz object that needs to be created",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.QuizCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/quiz/{quiz_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Quiz By Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Quiz By Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Quiz ID",
                        "name": "quiz_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.QuizWithAnswer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/quiz_list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Quiz List With Answers By Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Quiz List With Answers By Member",
                "parameters": [
                    {
                        "description": "Quiz object page list",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.QuizListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.QuizListResponse"
                        }
                    }
                }
            }
        },
        "/my/unit": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all units that the member belongs to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "summary": "Get Units",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account",
                        "name": "account",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.UnitResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a unit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "summary": "Update Unit",
                "parameters": [
                    {
                        "description": "Unit object that needs to be updated",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UnitUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a unit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "summary": "Create Unit",
                "parameters": [
                    {
                        "description": "Unit object that needs to be created",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UnitCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a unit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "summary": "Delete Unit",
                "parameters": [
                    {
                        "description": "Unit object that needs to be deleted",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UnitDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/unit/permission": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Assign a unit permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Unit"
                ],
                "summary": "Assign Unit Permission",
                "parameters": [
                    {
                        "description": "Unit object that needs to be assigned",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AssignUnitPermissionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/my/unit_id/:unit_id/words": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get words by unit id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Word"
                ],
                "summary": "Get Words",
                "parameters": [
                    {
                        "type": "string",
                        "description": "unit id",
                        "name": "unit_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.WordResponse"
                        }
                    }
                }
            }
        },
        "/my/word": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a word",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Word"
                ],
                "summary": "Update Word",
                "parameters": [
                    {
                        "description": "Word object that needs to be updated",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.WordUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a word",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Word"
                ],
                "summary": "Create Word",
                "parameters": [
                    {
                        "description": "Word object that needs to be created",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.WordCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a word",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Word"
                ],
                "summary": "Delete Word",
                "parameters": [
                    {
                        "description": "Word object that needs to be deleted",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.WordDeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.AssignCourseRequest": {
            "type": "object",
            "required": [
                "course_id",
                "member_id",
                "organization_id",
                "role_id"
            ],
            "properties": {
                "course_id": {
                    "type": "string",
                    "example": "1"
                },
                "member_id": {
                    "type": "string",
                    "example": "1"
                },
                "organization_id": {
                    "type": "string",
                    "example": "1"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "requests.AssignRoleToMemberRequest": {
            "type": "object",
            "required": [
                "member_id",
                "organization_id",
                "role_id"
            ],
            "properties": {
                "member_id": {
                    "type": "string",
                    "example": "1"
                },
                "organization_id": {
                    "type": "string",
                    "example": "1"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "requests.AssignUnitPermissionRequest": {
            "type": "object",
            "required": [
                "course_id",
                "member_id",
                "role_id",
                "unit_id"
            ],
            "properties": {
                "course_id": {
                    "type": "string",
                    "example": "1"
                },
                "member_id": {
                    "type": "string",
                    "example": "1"
                },
                "role_id": {
                    "type": "integer",
                    "example": 1
                },
                "unit_id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "requests.CourseCreateRequest": {
            "type": "object",
            "required": [
                "order",
                "organization_id",
                "publish",
                "title"
            ],
            "properties": {
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "organization_id": {
                    "type": "string",
                    "example": "1"
                },
                "publish": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "course title"
                }
            }
        },
        "requests.CourseDeleteReqeust": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "requests.CourseUpdateReqeust": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "organization_id": {
                    "type": "string",
                    "example": "1"
                },
                "publish": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "course title update"
                }
            }
        },
        "requests.LoginRequeset": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "type": "string",
                    "example": "test"
                }
            }
        },
        "requests.MemberUpdateRequest": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "gender": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "test"
                }
            }
        },
        "requests.OrganizationCreateRequest": {
            "type": "object",
            "required": [
                "order",
                "publish",
                "source_language",
                "target_language",
                "title"
            ],
            "properties": {
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "publish": {
                    "type": "integer",
                    "example": 1
                },
                "source_language": {
                    "type": "string",
                    "example": "en"
                },
                "target_language": {
                    "type": "string",
                    "example": "zh"
                },
                "title": {
                    "type": "string",
                    "example": "organization title"
                }
            }
        },
        "requests.OrganizationDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "requests.OrganizationUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "publish": {
                    "type": "integer",
                    "example": 1
                },
                "source_language": {
                    "type": "string",
                    "example": "en"
                },
                "target_language": {
                    "type": "string",
                    "example": "zh"
                },
                "title": {
                    "type": "string",
                    "example": "organization title update"
                }
            }
        },
        "requests.QuizCreateRequest": {
            "type": "object",
            "required": [
                "course_id",
                "organization_id",
                "question_type",
                "quiz_count",
                "topic"
            ],
            "properties": {
                "course_id": {
                    "type": "string",
                    "example": "1"
                },
                "exam_date": {
                    "type": "string",
                    "example": "30"
                },
                "members_id": {
                    "description": "--/info",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "1",
                        " 2",
                        " 3"
                    ]
                },
                "organization_id": {
                    "type": "string",
                    "example": "1"
                },
                "question_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "multiple_choice",
                        " true_false",
                        " full_in_blank"
                    ]
                },
                "quiz_count": {
                    "description": "Info",
                    "type": "integer",
                    "example": 10
                },
                "topic": {
                    "type": "integer",
                    "example": 1
                },
                "unit_id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "requests.QuizListRequest": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "requests.UnitCreateRequest": {
            "type": "object",
            "required": [
                "course_id",
                "order",
                "publish",
                "title"
            ],
            "properties": {
                "course_id": {
                    "type": "string",
                    "example": "1"
                },
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "publish": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "unit title"
                }
            }
        },
        "requests.UnitDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "requests.UnitUpdateRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "course_id": {
                    "type": "string",
                    "example": "1"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "publish": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "example": "unit title update"
                }
            }
        },
        "requests.WordCreateRequest": {
            "type": "object",
            "required": [
                "definition",
                "order",
                "unit_id",
                "word"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "comment"
                },
                "definition": {
                    "type": "string",
                    "example": "definition"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "image": {
                    "type": "string",
                    "example": "image"
                },
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "pronunciation": {
                    "type": "string",
                    "example": "pronunciation"
                },
                "unit_id": {
                    "type": "string",
                    "example": "1"
                },
                "word": {
                    "type": "string",
                    "example": "word"
                }
            }
        },
        "requests.WordDeleteRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "requests.WordUpdateRequest": {
            "type": "object",
            "required": [
                "definition",
                "id",
                "order",
                "unit_id",
                "word"
            ],
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "comment"
                },
                "definition": {
                    "type": "string",
                    "example": "definition"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "image": {
                    "type": "string",
                    "example": "image"
                },
                "order": {
                    "type": "integer",
                    "example": 1
                },
                "pronunciation": {
                    "type": "string",
                    "example": "pronunciation"
                },
                "unit_id": {
                    "type": "string",
                    "example": "1"
                },
                "word": {
                    "type": "string",
                    "example": "word"
                }
            }
        },
        "responses.CourseResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "string"
                },
                "publish": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "responses.GetMemberResonse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/responses.MemberinfoResponse"
                },
                "msg": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "responses.LoginResonse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "$ref": "#/definitions/responses.TokenResponse"
                },
                "msg": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "responses.MemberinfoResponse": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "string",
                    "example": "2021-01-01"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "gender": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "string",
                    "example": "123456"
                },
                "name": {
                    "type": "string",
                    "example": "test"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                }
            }
        },
        "responses.OrganizationResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "creater_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "publish": {
                    "type": "integer"
                },
                "source_language": {
                    "type": "string"
                },
                "target_language": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "responses.QuizListResponse": {
            "type": "object",
            "properties": {
                "quizList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.QuizWithAnswers"
                    }
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "responses.QuizWithAnswer": {
            "type": "object",
            "properties": {
                "answer_question": {
                    "type": "string",
                    "example": "{}"
                },
                "content": {
                    "type": "string",
                    "example": "{}"
                },
                "creater_id": {
                    "type": "string",
                    "example": "1"
                },
                "due_date": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "failed_answer_count": {
                    "type": "integer",
                    "example": 10
                },
                "failed_logs": {
                    "type": "string",
                    "example": "{}"
                },
                "info": {
                    "type": "string",
                    "example": "{}"
                },
                "question_type": {
                    "type": "string",
                    "example": "mutiple_choice"
                },
                "quiz_answer_record_id": {
                    "type": "string",
                    "example": "1"
                },
                "quiz_id": {
                    "type": "string",
                    "example": "1"
                },
                "scope": {
                    "type": "integer",
                    "example": 50
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "topic": {
                    "type": "integer",
                    "example": 1
                },
                "total_question_count": {
                    "type": "integer",
                    "example": 20
                },
                "type": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "responses.QuizWithAnswers": {
            "type": "object",
            "properties": {
                "creater_id": {
                    "type": "string",
                    "example": "1"
                },
                "due_date": {
                    "type": "string",
                    "example": "2021-01-01 00:00:00"
                },
                "failed_answer_count": {
                    "type": "integer",
                    "example": 10
                },
                "failed_logs": {
                    "type": "string",
                    "example": "{}"
                },
                "info": {
                    "type": "string",
                    "example": "{}"
                },
                "question_type": {
                    "type": "string",
                    "example": "mutiple_choice"
                },
                "quiz_answer_record_id": {
                    "type": "string",
                    "example": "1"
                },
                "quiz_id": {
                    "type": "string",
                    "example": "1"
                },
                "scope": {
                    "type": "integer",
                    "example": 50
                },
                "status": {
                    "type": "integer",
                    "example": 1
                },
                "topic": {
                    "type": "integer",
                    "example": 1
                },
                "total_question_count": {
                    "type": "integer",
                    "example": 20
                },
                "type": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "responses.ResponseFail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": -1
                },
                "data": {
                    "type": "string",
                    "example": ""
                },
                "msg": {
                    "type": "string",
                    "example": "fail reason"
                }
            }
        },
        "responses.ResponseSuccess": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 0
                },
                "data": {
                    "type": "string",
                    "example": "{}"
                },
                "msg": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "responses.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "jwt token"
                }
            }
        },
        "responses.UnitResponse": {
            "type": "object",
            "properties": {
                "course_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "creator_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "publish": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "responses.WordResponse": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "definition": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "pronunciation": {
                    "type": "string"
                },
                "unit_id": {
                    "type": "string"
                },
                "word": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
