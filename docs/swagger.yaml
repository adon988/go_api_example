definitions:
  requests.AssignCourseRequest:
    properties:
      course_id:
        example: "1"
        type: string
      member_id:
        example: "1"
        type: string
      organization_id:
        example: "1"
        type: string
      role_id:
        example: 1
        type: integer
    required:
    - course_id
    - member_id
    - organization_id
    - role_id
    type: object
  requests.AssignRoleToMemberRequest:
    properties:
      member_id:
        example: "1"
        type: string
      organization_id:
        example: "1"
        type: string
      role_id:
        example: 1
        type: integer
    required:
    - member_id
    - organization_id
    - role_id
    type: object
  requests.AssignUnitPermissionRequest:
    properties:
      course_id:
        example: "1"
        type: string
      member_id:
        example: "1"
        type: string
      role_id:
        example: 1
        type: integer
      unit_id:
        example: "1"
        type: string
    required:
    - course_id
    - member_id
    - role_id
    - unit_id
    type: object
  requests.CourseCreateRequest:
    properties:
      order:
        example: 1
        type: integer
      organization_id:
        example: "1"
        type: string
      publish:
        example: 1
        type: integer
      title:
        example: course title
        type: string
    required:
    - order
    - organization_id
    - publish
    - title
    type: object
  requests.CourseDeleteReqeust:
    properties:
      id:
        example: "1"
        type: string
    required:
    - id
    type: object
  requests.CourseUpdateReqeust:
    properties:
      id:
        example: "1"
        type: string
      order:
        example: 1
        type: integer
      organization_id:
        example: "1"
        type: string
      publish:
        example: 1
        type: integer
      title:
        example: course title update
        type: string
    required:
    - id
    type: object
  requests.LoginRequeset:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: test
        type: string
    required:
    - password
    - username
    type: object
  requests.MemberUpdateRequest:
    properties:
      birthday:
        example: "2021-01-01"
        type: string
      email:
        example: example@example.com
        type: string
      gender:
        example: 1
        type: integer
      name:
        example: test
        type: string
    type: object
  requests.OrganizationCreateRequest:
    properties:
      order:
        example: 1
        type: integer
      publish:
        example: 1
        type: integer
      source_language:
        example: en
        type: string
      target_language:
        example: zh
        type: string
      title:
        example: organization title
        type: string
    required:
    - order
    - publish
    - source_language
    - target_language
    - title
    type: object
  requests.OrganizationDeleteRequest:
    properties:
      id:
        example: "1"
        type: string
    required:
    - id
    type: object
  requests.OrganizationUpdateRequest:
    properties:
      id:
        example: "1"
        type: string
      order:
        example: 1
        type: integer
      publish:
        example: 1
        type: integer
      source_language:
        example: en
        type: string
      target_language:
        example: zh
        type: string
      title:
        example: organization title update
        type: string
    required:
    - id
    type: object
  requests.UnitCreateRequest:
    properties:
      course_id:
        example: "1"
        type: string
      order:
        example: 1
        type: integer
      publish:
        example: 1
        type: integer
      title:
        example: unit title
        type: string
    required:
    - course_id
    - order
    - publish
    - title
    type: object
  requests.UnitDeleteRequest:
    properties:
      id:
        example: "1"
        type: string
    required:
    - id
    type: object
  requests.UnitUpdateRequest:
    properties:
      course_id:
        example: "1"
        type: string
      id:
        example: "1"
        type: string
      order:
        example: 1
        type: integer
      publish:
        example: 1
        type: integer
      title:
        example: unit title update
        type: string
    required:
    - id
    type: object
  requests.WordCreateRequest:
    properties:
      comment:
        example: comment
        type: string
      definition:
        example: definition
        type: string
      description:
        example: description
        type: string
      image:
        example: image
        type: string
      order:
        example: 1
        type: integer
      pronunciation:
        example: pronunciation
        type: string
      unit_id:
        example: "1"
        type: string
      word:
        example: word
        type: string
    required:
    - definition
    - order
    - unit_id
    - word
    type: object
  requests.WordDeleteRequest:
    properties:
      id:
        example: "1"
        type: string
    required:
    - id
    type: object
  requests.WordUpdateRequest:
    properties:
      comment:
        example: comment
        type: string
      definition:
        example: definition
        type: string
      description:
        example: description
        type: string
      id:
        example: "1"
        type: string
      image:
        example: image
        type: string
      order:
        example: 1
        type: integer
      pronunciation:
        example: pronunciation
        type: string
      unit_id:
        example: "1"
        type: string
      word:
        example: word
        type: string
    required:
    - definition
    - id
    - order
    - unit_id
    - word
    type: object
  responses.CourseResponse:
    properties:
      created_at:
        type: string
      creator_id:
        type: string
      id:
        type: string
      order:
        type: integer
      organization_id:
        type: string
      publish:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  responses.GetMemberResonse:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/responses.MemberinfoResponse'
      msg:
        example: success
        type: string
    type: object
  responses.LoginResonse:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/responses.TokenResponse'
      msg:
        example: success
        type: string
    type: object
  responses.MemberinfoResponse:
    properties:
      birthday:
        example: "2021-01-01"
        type: string
      created_at:
        example: "2021-01-01 00:00:00"
        type: string
      email:
        example: example@example.com
        type: string
      gender:
        example: 1
        type: integer
      id:
        example: "123456"
        type: string
      name:
        example: test
        type: string
      updated_at:
        example: "2021-01-01 00:00:00"
        type: string
    type: object
  responses.OrganizationResponse:
    properties:
      created_at:
        type: string
      creater_id:
        type: string
      id:
        type: string
      order:
        type: integer
      publish:
        type: integer
      source_language:
        type: string
      target_language:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  responses.ResponseFail:
    properties:
      code:
        example: -1
        type: integer
      data:
        example: ""
        type: string
      msg:
        example: fail reason
        type: string
    type: object
  responses.ResponseSuccess:
    properties:
      code:
        example: 0
        type: integer
      data:
        example: '{}'
        type: string
      msg:
        example: success
        type: string
    type: object
  responses.TokenResponse:
    properties:
      token:
        example: jwt token
        type: string
    type: object
  responses.UnitResponse:
    properties:
      course_id:
        type: string
      created_at:
        type: string
      creator_id:
        type: string
      id:
        type: string
      order:
        type: integer
      publish:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  responses.WordResponse:
    properties:
      comment:
        type: string
      definition:
        type: string
      description:
        type: string
      id:
        type: string
      image:
        type: string
      order:
        type: integer
      pronunciation:
        type: string
      unit_id:
        type: string
      word:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequeset'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{"token":"token"},msg":"success"}'
          schema:
            $ref: '#/definitions/responses.LoginResonse'
        "400":
          description: 'msg: account not exists'
          schema:
            $ref: '#/definitions/responses.ResponseFail'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requests.LoginRequeset'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSuccess'
        "400":
          description: 'msg: account already exists(:0) \n msg: failed to create account(:1,
            :2)'
          schema:
            $ref: '#/definitions/responses.ResponseFail'
      summary: Register
      tags:
      - auth
  /member:
    delete:
      consumes:
      - application/json
      description: Delete a member
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a member
      tags:
      - member
    get:
      consumes:
      - application/json
      description: Get a member by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.GetMemberResonse'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get a member by ID
      tags:
      - member
    patch:
      consumes:
      - application/json
      description: Update a member
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requests.MemberUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseSuccess'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a member
      tags:
      - member
  /my/course:
    delete:
      consumes:
      - application/json
      description: Delete course
      parameters:
      - description: Course object that needs to be deleted
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/requests.CourseDeleteReqeust'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Course
      tags:
      - Course
    get:
      consumes:
      - application/json
      description: Get all courses that the member belongs to
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.CourseResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Course
      tags:
      - Course
    post:
      consumes:
      - application/json
      description: Create a course, and assign the creator as the admin of the course
      parameters:
      - description: Course object that needs to be created
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/requests.CourseCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Course
      tags:
      - Course
    put:
      consumes:
      - application/json
      description: Update course information
      parameters:
      - description: Course object that needs to be updated
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/requests.CourseUpdateReqeust'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update Course
      tags:
      - Course
  /my/course/assign:
    post:
      consumes:
      - application/json
      description: Assign course permission to member
      parameters:
      - description: Course object that needs to be assigned
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/requests.AssignCourseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Assign Course Permission
      tags:
      - Course
  /my/organization:
    delete:
      consumes:
      - application/json
      description: Delete organization
      parameters:
      - description: Organization object that needs to be deleted
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/requests.OrganizationDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"success"}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Organization
      tags:
      - Organization
    get:
      consumes:
      - application/json
      description: Get all organizations that the member belongs to
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.OrganizationResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Organization
      tags:
      - Organization
    patch:
      consumes:
      - application/json
      description: Update organization information
      parameters:
      - description: Organization object that needs to be updated
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/requests.OrganizationUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"success"}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update Organization
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: Create a new organization, and the creator will be the admin of
        the organization
      parameters:
      - description: Organization object that needs to be created
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/requests.OrganizationCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"success"}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Organization
      tags:
      - Organization
  /my/organization/assign:
    post:
      consumes:
      - application/json
      description: Assign organization permission to another member
      parameters:
      - description: Organization object that needs to be assigned
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/requests.AssignRoleToMemberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"success"}'
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Assign Organization Permission
      tags:
      - Organization
  /my/unit:
    delete:
      consumes:
      - application/json
      description: Delete a unit
      parameters:
      - description: Unit object that needs to be deleted
        in: body
        name: unit
        required: true
        schema:
          $ref: '#/definitions/requests.UnitDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Unit
      tags:
      - Unit
    get:
      consumes:
      - application/json
      description: Get all units that the member belongs to
      parameters:
      - description: Account
        in: header
        name: account
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.UnitResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Units
      tags:
      - Unit
    post:
      consumes:
      - application/json
      description: Create a unit
      parameters:
      - description: Unit object that needs to be created
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/requests.UnitCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Unit
      tags:
      - Unit
    put:
      consumes:
      - application/json
      description: Update a unit
      parameters:
      - description: Unit object that needs to be updated
        in: body
        name: unit
        required: true
        schema:
          $ref: '#/definitions/requests.UnitUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update Unit
      tags:
      - Unit
  /my/unit/permission:
    post:
      consumes:
      - application/json
      description: Assign a unit permission
      parameters:
      - description: Unit object that needs to be assigned
        in: body
        name: unit
        required: true
        schema:
          $ref: '#/definitions/requests.AssignUnitPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Assign Unit Permission
      tags:
      - Unit
  /my/word:
    delete:
      consumes:
      - application/json
      description: Delete a word
      parameters:
      - description: Word object that needs to be deleted
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/requests.WordDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Word
      tags:
      - Word
    post:
      consumes:
      - application/json
      description: Create a word
      parameters:
      - description: Word object that needs to be created
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/requests.WordCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Word
      tags:
      - Word
    put:
      consumes:
      - application/json
      description: Update a word
      parameters:
      - description: Word object that needs to be updated
        in: body
        name: title
        required: true
        schema:
          $ref: '#/definitions/requests.WordUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update Word
      tags:
      - Word
  /my/words:
    get:
      consumes:
      - application/json
      description: Get words by unit id
      parameters:
      - description: unit id
        in: query
        name: unit_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.WordResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Words
      tags:
      - Word
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
