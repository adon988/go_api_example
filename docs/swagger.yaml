definitions:
  controllers.GetMemberResonse:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/controllers.MemberinfoResponse'
      msg:
        example: success
        type: string
    type: object
  controllers.LoginResonse:
    properties:
      code:
        example: 0
        type: integer
      data:
        $ref: '#/definitions/controllers.TokenResponse'
      msg:
        example: success
        type: string
    type: object
  controllers.LoginVerify:
    properties:
      password:
        example: "123456"
        type: string
      username:
        example: test
        type: string
    required:
    - password
    - username
    type: object
  controllers.MemberUpdateVerify:
    properties:
      age:
        example: 18
        type: integer
      birthday:
        example: "2021-01-01"
        type: string
      email:
        example: example@example.com
        type: string
      gender:
        example: 1
        type: integer
      name:
        example: test
        type: string
    type: object
  controllers.MemberinfoResponse:
    properties:
      birthday:
        example: "2021-01-01"
        type: string
      created_at:
        example: "2021-01-01 00:00:00"
        type: string
      email:
        example: example@example.com
        type: string
      id:
        example: "123456"
        type: string
      name:
        example: test
        type: string
      updated_at:
        example: "2021-01-01 00:00:00"
        type: string
    type: object
  controllers.TokenResponse:
    properties:
      token:
        example: jwt token
        type: string
    type: object
  response.ResponseFail:
    properties:
      code:
        example: -1
        type: integer
      data:
        example: ""
        type: string
      msg:
        example: fail reason
        type: string
    type: object
  response.ResponseSuccess:
    properties:
      code:
        example: 0
        type: integer
      data:
        example: '{}'
        type: string
      msg:
        example: success
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginVerify'
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{"token":"token"},msg":"success"}'
          schema:
            $ref: '#/definitions/controllers.LoginResonse'
        "400":
          description: 'msg: account not exists'
          schema:
            $ref: '#/definitions/response.ResponseFail'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/controllers.LoginVerify'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseSuccess'
        "400":
          description: 'msg: account already exists(:0) \n msg: failed to create account(:1,
            :2)'
          schema:
            $ref: '#/definitions/response.ResponseFail'
      summary: Register
      tags:
      - auth
  /member:
    delete:
      consumes:
      - application/json
      description: Delete a member
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete a member
      tags:
      - member
    get:
      consumes:
      - application/json
      description: Get a member by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.GetMemberResonse'
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get a member by ID
      tags:
      - member
    patch:
      consumes:
      - application/json
      description: Update a member
      parameters:
      - description: req
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/controllers.MemberUpdateVerify'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update a member
      tags:
      - member
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
